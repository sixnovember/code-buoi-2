//bai 1
#include <stdio.h>

int main() {
    int i;

    printf("Các số nguyên có 2 chữ số và là bội của 7:\n");

    for (i = 10; i <= 99; i++) {
        if (i % 7 == 0) {
            printf("%d\n", i);
        }
    }

    return 0;
}


//bai 2
#include <stdio.h>
#include <math.h> // Để sử dụng hàm sqrt()

// Hàm kiểm tra xem một số có phải là số chính phương không
int isPerfectSquare(int num) {
    int squareRoot = sqrt(num); // Lấy căn bậc 2 của số
    return (squareRoot * squareRoot == num); // Kiểm tra xem bình phương của căn bậc 2 có bằng số ban đầu không
}

// Hàm đếm số chính phương nhỏ hơn n và in ra chúng
void countAndPrintPerfectSquares(int n) {
    int count = 0;
    printf("Các số chính phương nhỏ hơn %d là:\n", n);
    for (int i = 1; i < n; i++) {
        if (isPerfectSquare(i)) {
            printf("%d ", i);
            count++;
        }
    }
    printf("\nTổng số chính phương nhỏ hơn %d là: %d\n", n, count);
}

int main() {
    int n;

    printf("Nhập một số nguyên dương n: ");
    scanf("%d", &n);

    countAndPrintPerfectSquares(n); // Gọi hàm để đếm và in ra các số chính phương nhỏ hơn n

    return 0;
}
